package Bot;

import Bot.Keyboards.InlineKeyboardMarkupBuilder;
import Bot.Keyboards.ReplyKeyboardMarkupBuilder;
import Bot.Models.Order;
import Bot.Models.Products.*;
import Bot.Service.*;
import org.telegram.telegrambots.ApiContextInitializer;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.api.methods.AnswerCallbackQuery;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.exceptions.TelegramApiRequestException;

import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;
import java.util.ArrayList;
import java.util.Date;

public class GrizzlyShopBot extends TelegramLongPollingBot {

    private static final HookahService HOOKAH_SERVICE = new HookahService();
    private static final TobaccoService TOBACCO_SERVICE = new TobaccoService();
    private static final CartService CART_SERVICE = new CartService();
    private static final AccessoriesService ACCESSORIES_SERVICE = new AccessoriesService();
    private static final CharcoalService CHARCOAL_SERVICE = new CharcoalService();
    private static final VaporizerService VAPORIZER_SERVICE = new VaporizerService();
    private static final OrderService ORDER_SERVICE = new OrderService();
    private static final ArrayList<Vaporizer> allVaporizers = VAPORIZER_SERVICE.getAllVaporizers();
    private static final ArrayList<Vaporizer> allAvailableVaporizers = VAPORIZER_SERVICE.getAvailableVaporizers();
    private static final ArrayList<String> allAccessoryTypes = ACCESSORIES_SERVICE.getAllTypes();
    private static final ArrayList<String> allAccessoryBowlBrands = ACCESSORIES_SERVICE.getBowlsBrandList();
    private static final ArrayList<String> allAccessoryAvailableBowlBrands = ACCESSORIES_SERVICE.getAvailableBowlsBrandList();
    private static final ArrayList<String> allHookahBrands = HOOKAH_SERVICE.getAllBrandsList();
    private static final ArrayList<String> availableHookahBrands = HOOKAH_SERVICE.getAvailableBrandsList();
    private static final ArrayList<Tobacco> allTobaccos = TOBACCO_SERVICE.getAllTobacco();
    private static final ArrayList<Tobacco> allAvailableTobaccos = TOBACCO_SERVICE.getAllAvailableTobacco();
    private static final ArrayList<String> allTobaccoFortresses = TOBACCO_SERVICE.getAllFortresses();
    private static final ArrayList<String> allAvailableTobaccoFortresses = TOBACCO_SERVICE.getAllAvailableFortresses();

    public static void main(String[] args) {
        ApiContextInitializer.init();
        TelegramBotsApi telegramBotsApi = new TelegramBotsApi();
        try {
            telegramBotsApi.registerBot(new GrizzlyShopBot());
        } catch (TelegramApiRequestException e) {
            e.printStackTrace();
        }
    }


    public synchronized void onUpdateReceived(Update update) {
        try {
            updateHandle(update);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    public synchronized EditMessageText messageHandle(String text, long chat_id, long mes_id) {
        text = text.substring(1);
        EditMessageText editMessageText;
        switch (text) {
            case "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id).rebuild(mes_id);
                editMessageText.setText("–≥. –°–∞–º–∞—Ä–∞, —É–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è, 1\n" +
                        "–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: –ü–ù ‚Äì –í–°, —Å 12.00 –¥–æ 24.00\n" +
                        "\n" +
                        "–¢–µ–ª–µ—Ñ–æ–Ω: 8 (927) 002-75-57" +
                        "\n" +
                        "\n–≥. –°–∞–º–∞—Ä–∞, –ø—Ä. –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞, 196 (–ñ–ö –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π)\n" +
                        "–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: –ü–ù ‚Äì –í–°, —Å 12.00 –¥–æ 24.00\n" +
                        "\n" +
                        "–¢–µ–ª–µ—Ñ–æ–Ω: 8 (927) 760-11-17");
                return editMessageText;
            case "üìì –ö–∞—Ç–∞–ª–æ–≥":
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("–¢–∞–±–∞–∫–∏", "m–¢–∞–±–∞–∫–∏")
                        .button("–ö–∞–ª—å—è–Ω—ã", "m–ö–∞–ª—å—è–Ω—ã")
                        .endRow()
                        .row()
                        .button("–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã", "m–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                        .button("–£–≥–æ–ª—å", "m–£–≥–æ–ª—å")
                        .endRow()
                        .row()
                        .button("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏", "m–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏")
                        .endRow()
                        .row()
                        .button("üìå –ü–æ–º–æ—â—å", "m–ü–æ–º–æ—â—å–ö–∞—Ç–∞–ª–æ–≥")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("*–ö–∞—Ç–∞–ª–æ–≥ - GRIZZLY SHOP -*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞:");
                return editMessageText;
            case "–ü–æ–º–æ—â—å–ö–∞—Ç–∞–ª–æ–≥":
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("–¢–∞–±–∞–∫–∏", "m–¢–∞–±–∞–∫–∏")
                        .button("–ö–∞–ª—å—è–Ω—ã", "m–ö–∞–ª—å—è–Ω—ã")
                        .endRow()
                        .row()
                        .button("–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã", "m–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                        .button("–£–≥–æ–ª—å", "m–£–≥–æ–ª—å")
                        .endRow()
                        .row()
                        .button("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏", "m–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("*–ö–∞—Ç–∞–ª–æ–≥ - GRIZZLY SHOP -*\n\n–î–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n\n‚òë –í—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–æ–≤–∞—Ä –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞" +
                        "\n‚òë –î–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –∫–æ—Ä–∑–∏–Ω—É\n‚òë –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ");
                return editMessageText;
            case "üìî –ù–∞–ª–∏—á–∏–µ":
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("–¢–∞–±–∞–∫–∏", "tA/–¢–∞–±–∞–∫–∏")
                        .button("–ö–∞–ª—å—è–Ω—ã", "hA/–ö–∞–ª—å—è–Ω—ã")
                        .endRow()
                        .row()
                        .button("–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã", "aA/–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                        .button("–£–≥–æ–ª—å", "uA/–£–≥–æ–ª—å")
                        .endRow()
                        .row()
                        .button("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏", "vA/–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏")
                        .endRow()
                        .row()
                        .button("üìå –ü–æ–º–æ—â—å", "m–ü–æ–º–æ—â—å–ù–∞–ª–∏—á–∏–µ")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("*–ù–∞–ª–∏—á–∏–µ - GRIZZLY SHOP -*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞:");
                return editMessageText;
            case "–ü–æ–º–æ—â—å–ù–∞–ª–∏—á–∏–µ":
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("–¢–∞–±–∞–∫–∏", "tA/–¢–∞–±–∞–∫–∏")
                        .button("–ö–∞–ª—å—è–Ω—ã", "hA/–ö–∞–ª—å—è–Ω—ã")
                        .endRow()
                        .row()
                        .button("–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã", "aA/–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                        .button("–£–≥–æ–ª—å", "uA/–£–≥–æ–ª—å")
                        .endRow()
                        .row()
                        .button("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏", "vA/–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("*–ù–∞–ª–∏—á–∏–µ - GRIZZLY SHOP -*\n\n–î–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n\n‚òë –í—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–æ–≤–∞—Ä –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞" +
                        "\n‚òë –î–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –∫–æ—Ä–∑–∏–Ω—É\n‚òë –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ");
                return editMessageText;
            case "–ö–∞–ª—å—è–Ω—ã":
                return hookahHandle(text, chat_id, mes_id);
            case "–¢–∞–±–∞–∫–∏":
                return tobaccoHandle(text, chat_id, mes_id);
            case "üõí –ö–æ—Ä–∑–∏–Ω–∞":
                return cartHandle(text, chat_id, mes_id);
            case "–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã":
                return accessoryHandle(text, chat_id, mes_id);
            case "–£–≥–æ–ª—å":
                return charcoalHandle(text, chat_id, mes_id);
            case "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏":
                return vaporizerHandle(text, chat_id, mes_id);
        }
        return InlineKeyboardMarkupBuilder.create(chat_id)
                .rebuild(mes_id).setText("*–î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ*");
    }

    public synchronized SendMessage messageStarter(String text, SendMessage sendMessage) {
        long chat_id = Long.parseLong(sendMessage.getChatId());
        if (text.contains("–£–ª.") || text.contains("—É–ª.") || text.contains("—É–ª ") || text.contains("–£–ª ") ||
                text.contains("—Ä–∞–π–æ–Ω") || text.contains("–£–ª–∏—Ü–∞") || text.contains("—É–ª–∏—Ü–∞") || text.contains("–≥.")
                && text.contains("–≥–æ—Ä–æ–¥") || text.contains("–≥ ") || text.contains("–¥–æ–º") || text.contains("–¥.")
                && text.contains("–¥ ") || text.contains("–∫–≤–∞—Ä—Ç–∏—Ä–∞") || text.contains("–∫–≤.") || text.contains("–∫–≤ ") ||
                text.contains("–°–∞–º–∞—Ä–∞")) {
            ORDER_SERVICE.getOrder(chat_id).setAddress(text);
            sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                    .setText("*–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ / –î–æ—Å—Ç–∞–≤–∫–∞*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏." +
                            "\n\n\uD83C\uDFE0 –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É:\n" + text)
                    .row()
                    .button("‚úÖ –ê–¥—Ä–µ–∫—Å —É–∫–∞–∑–∞–Ω –≤–µ—Ä–Ω–æ")
                    .endRow()
                    .row()
                    .button("‚ùé –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏")
                    .endRow()
                    .build();
        }
        else {
            switch (text) {
                case "/start":
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GRIZZLY SHOP!*\n" +
                                    "–£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –±–æ–ª—å—à–æ–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∫–∞–ª—å—è–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏, " +
                                    "–≤–∫–ª—é—á–∞—è –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω—ã–µ –∞–∫—Å–µ—Å—É–∞—Ä—ã –∏ –æ–≥—Ä–æ–º–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∞–±–∞–∫–∞!" +
                                    "\n\n\uD83D\uDD1E *–î–∞–Ω–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ª–∏—Ü " +
                                    "—Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç.*\n–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É \"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å\", " +
                                    "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –í–∞–º –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 18 –ª–µ—Ç!\n" +
                                    "[_](https://sun9-19.userapi.com/c850720/v850720693/1666fd/HhIdoIXc2rI.jpg)")
                            .row()
                            .button("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
                            .endRow()
                            .build();
                    break;
                case "–ù–∞–∑–∞–¥":
                case "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å":
                case "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                case "\uD83D\uDD19 –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞*" +
                                    "\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Å–Ω–∏–∑—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
                            .row()
                            .button("üìì –ö–∞—Ç–∞–ª–æ–≥")
                            .button("üìî –ù–∞–ª–∏—á–∏–µ")
                            .endRow()
                            .row()
                            .button("üõí –ö–æ—Ä–∑–∏–Ω–∞")
                            .button("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
                            .endRow()
                            .build();
                    break;
                case "üìì –ö–∞—Ç–∞–ª–æ–≥":
                    sendMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–ö–∞—Ç–∞–ª–æ–≥ - GRIZZLY SHOP -*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞:")
                            .row()
                            .button("–¢–∞–±–∞–∫–∏", "m–¢–∞–±–∞–∫–∏")
                            .button("–ö–∞–ª—å—è–Ω—ã", "m–ö–∞–ª—å—è–Ω—ã")
                            .endRow()
                            .row()
                            .button("–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã", "m–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                            .button("–£–≥–æ–ª—å", "m–£–≥–æ–ª—å")
                            .endRow()
                            .row()
                            .button("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏", "m–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏")
                            .endRow()
                            .row()
                            .button("üìå –ü–æ–º–æ—â—å", "m–ü–æ–º–æ—â—å–ö–∞—Ç–∞–ª–æ–≥")
                            .endRow()
                            .build();
                    break;
                case "üìî –ù–∞–ª–∏—á–∏–µ":
                    sendMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–ù–∞–ª–∏—á–∏–µ - GRIZZLY SHOP -*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞:")
                            .row()
                            .button("–¢–∞–±–∞–∫–∏", "tA/–¢–∞–±–∞–∫–∏")
                            .button("–ö–∞–ª—å—è–Ω—ã", "hA/–ö–∞–ª—å—è–Ω—ã")
                            .endRow()
                            .row()
                            .button("–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã", "aA/–ê–∫—Å–µ—Å—É–∞—Ä—ã")
                            .button("–£–≥–æ–ª—å", "uA/–£–≥–æ–ª—å")
                            .endRow()
                            .row()
                            .button("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏", "vA/–ò—Å–ø–∞—Ä–∏—Ç–µ–ª–∏")
                            .endRow()
                            .row()
                            .button("üìå –ü–æ–º–æ—â—å", "m–ü–æ–º–æ—â—å–ù–∞–ª–∏—á–∏–µ")
                            .endRow()
                            .build();
                    break;
                case "üõí –ö–æ—Ä–∑–∏–Ω–∞":
                    if (CART_SERVICE.getUserCart(chat_id).getCart().size() == 0) {
                        sendMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                                .setText(CART_SERVICE.getUserCart(chat_id).toString())
                                .row()
                                .button("üìì –ö–∞—Ç–∞–ª–æ–≥", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                                .endRow()
                                .build();
                    } else {
                        sendMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                                .setText(CART_SERVICE.getUserCart(chat_id).toString())
                                .row()
                                .button("\uD83D\uDCE6 –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", "cmakeOrd")
                                .endRow()
                                .row()
                                .button("üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", "c&edit")
                                .endRow()
                                .build();
                    }
                    break;
                case "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
                    sendMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .setText("–≥. –°–∞–º–∞—Ä–∞, —É–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è, 1\n" +
                                    "–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: –ü–ù ‚Äì –í–°, —Å 12.00 –¥–æ 24.00\n" +
                                    "\n" +
                                    "–¢–µ–ª–µ—Ñ–æ–Ω: 8 (927) 002-75-57" +
                                    "\n" +
                                    "\n–≥. –°–∞–º–∞—Ä–∞, –ø—Ä. –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞, 196 (–ñ–ö –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π)\n" +
                                    "–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: –ü–ù ‚Äì –í–°, —Å 12.00 –¥–æ 24.00\n" +
                                    "\n" +
                                    "–¢–µ–ª–µ—Ñ–æ–Ω: 8 (927) 760-11-17")
                            .build();
                    break;
                case "\uD83D\uDCE6 –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑":
                case "\uD83D\uDD19 –ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è":
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("\uD83D\uDCE6 *–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞*\n\n–î–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º—ã" +
                                    " –ø–æ–ø—Ä–æ—Å–∏–º –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∞—Å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã—Ö —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤." +
                                    "\n–î–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–Ω–∏–∑—É" +
                                    "\n\n–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è:")
                            .row()
                            .button("üöö –î–æ—Å—Ç–∞–≤–∫–∞")
                            .button("üè¨ –°–∞–º–æ–≤—ã–≤–æ–∑")
                            .endRow()
                            .row()
                            .button("\uD83D\uDD19 –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                            .endRow()
                            .build();
                    break;
                case "üöö –î–æ—Å—Ç–∞–≤–∫–∞":
                case "‚ùé –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏":
                    ORDER_SERVICE.getOrder(chat_id).setDeliveryMethod("–î–æ—Å—Ç–∞–≤–∫–∞");
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ / –î–æ—Å—Ç–∞–≤–∫–∞*\n\n" +
                                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —á–∞—Ç –∞–¥—Ä–µ—Å –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç " +
                                    "—Å–æ–≤–µ—Ä—à–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É. –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ –≥–æ—Ä–æ–¥—É –°–∞–º–∞—Ä–∞." +
                                    "\n–ê–¥—Ä–µ—Å –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:" +
                                    "\n\n`–£–ª. –ù–∞–∑–≤–∞–Ω–∏–µ —É–ª–∏—Ü—ã, –¥. –ù–æ–º–µ—Ä –¥–æ–º–∞, –∫–≤. –ù–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã`")
                            .row()
                            .button("\uD83D\uDD19 –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                            .endRow()
                            .build();
                    break;
                case "üè¨ –°–∞–º–æ–≤—ã–≤–æ–∑":
                case "\uD83D\uDD19 –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å —Å–∞–º–æ–≤—ã–≤–æ–∑–∞":
                    ORDER_SERVICE.getOrder(chat_id).setDeliveryMethod("–°–∞–º–æ–≤—ã–≤–æ–∑");
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ / –°–∞–º–æ–≤—ã–≤–æ–∑*\n\n–°–∞–º–æ–≤—ã–≤–æ–∑ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ –æ–¥–Ω–æ–º –∏–∑ –Ω–∞—à–∏—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤. üè¨" +
                                    "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞:")
                            .row()
                            .button("–†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1")
                            .endRow()
                            .row()
                            .button("–ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196")
                            .endRow()
                            .row()
                            .button("\uD83D\uDD19 –ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è")
                            .endRow()
                            .build();
                    break;
                case "–†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1":
                    ORDER_SERVICE.getOrder(chat_id).setAddress("–ú–∞–≥–∞–∑–∏–Ω –Ω–∞ —É–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1");
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ / –°–∞–º–æ–≤—ã–≤–æ–∑*\n\n–ó–∞–∫–∞–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, " +
                                    "–ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞" +
                                    " –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n–£–≤–µ—Ä—è–µ–º –í–∞—Å, —Ç–µ–ª–µ—Ñ–æ–Ω –±—É–¥–µ—Ç " +
                                    "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –¥–∞–Ω–Ω—ã—Ö —Ü–µ–ª—è—Ö")
                            .row()
                            .buttonWithContactRequest("\uD83D\uDCDE –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
                            .endRow()
                            .row()
                            .button("\uD83D\uDD19 –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å —Å–∞–º–æ–≤—ã–≤–æ–∑–∞")
                            .endRow()
                            .build();
                    break;
                case "–ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196":
                    ORDER_SERVICE.getOrder(chat_id).setAddress("–ú–∞–≥–∞–∑–∏–Ω –Ω–∞ —É–ª. –ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196");
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ / –°–∞–º–æ–≤—ã–≤–æ–∑*\n\n–ó–∞–∫–∞–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, " +
                                    "–ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞" +
                                    " –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n–£–≤–µ—Ä—è–µ–º –í–∞—Å, —Ç–µ–ª–µ—Ñ–æ–Ω –±—É–¥–µ—Ç " +
                                    "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –¥–∞–Ω–Ω—ã—Ö —Ü–µ–ª—è—Ö")
                            .row()
                            .buttonWithContactRequest("\uD83D\uDCDE –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
                            .endRow()
                            .row()
                            .button("\uD83D\uDD19 –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å —Å–∞–º–æ–≤—ã–≤–æ–∑–∞")
                            .endRow()
                            .build();
                    break;
                case "–î–∞":
                case "–í–µ—Ä–Ω–æ":
                case "‚úÖ –ê–¥—Ä–µ–∫—Å —É–∫–∞–∑–∞–Ω –≤–µ—Ä–Ω–æ":
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("*–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ / –î–æ—Å—Ç–∞–≤–∫–∞*\n\n–ó–∞–∫–∞–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å " +
                                    "–Ω–∞–º–∏ —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π " +
                                    "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n–£–≤–µ—Ä—è–µ–º –í–∞—Å, —Ç–µ–ª–µ—Ñ–æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –¥–∞–Ω–Ω—ã—Ö —Ü–µ–ª—è—Ö")
                            .row()
                            .buttonWithContactRequest("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
                            .endRow()
                            .row()
                            .buttonWithContactRequest("\uD83D\uDD19 –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                            .endRow()
                            .build();
                    break;
                case "–ü–æ–¥–µ–ª–∏–ª–∏—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞":
                    Order order = ORDER_SERVICE.getOrder(chat_id);
                    order.setCustomerCart(CART_SERVICE.getUserCart(chat_id).toStringOrder());
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("*" + order.getCustomerName() + ", –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞—à–∏–º " +
                                    "—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º.*\n–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —É—Ç–æ—á–Ω—è—é—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏." +
                                    "\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!")
                            .row()
                            .button("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                            .endRow()
                            .build();
                    break;
                case "–ù–µ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞":
                    sendMessage = ReplyKeyboardMarkupBuilder.create(chat_id)
                            .setText("–ü–ª–æ—Ö–æ, —á—Ç–æ –≤—ã –Ω–µ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å –Ω–æ–º–µ—Ä–æ–º. –¢–µ–ø–µ—Ä—å –º—ã –Ω–∞–π–¥—ë–º –∏ —É–±—å—ë–º –≤–∞—Å")
                            .build();
                    break;
            }
        }
        return sendMessage.setParseMode("Markdown");
    }

    public String gbpihquowbgwgbcwssssiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvergfvuyvwagxgdxbcewibcvubwwevdowieibhoeasdaasgdqwes = "EdDNMvak";

    public synchronized EditMessageText availableHookahHandle(String text, long chat_id, long mes_id) {
        text = text.substring(3);
        EditMessageText editMessage;
        if (availableHookahBrands.contains(text)) {
            ArrayList<Hookah> hookahs = HOOKAH_SERVICE.getAvailableHookahsByBrand(text);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .hookahButtons(hookahs, "hA/")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "hA/–ö–∞–ª—å—è–Ω—ã")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("*–ù–∞–ª–∏—á–∏–µ / –ö–∞–ª—å—è–Ω—ã*\n\n–ö–∞–ª—å—è–Ω—ã –±—Ä–µ–Ω–¥–∞ *" + text + "*: ");
        }
        else if (text.contains("&")) {
            Hookah cartHookah;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            cartHookah = HOOKAH_SERVICE.getHookahById(id);
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("hA/&" + id + "?" + ++count,"crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "hA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + cartHookah.getBrand() + "* | " + cartHookah.getName() +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartHookah.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartHookah.getPrice()*count) + " _—Ä—É–±._" +
                        "\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("hA/&" + id + "?" + --count,"crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "hA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + cartHookah.getBrand() + "* | " + cartHookah.getName() +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartHookah.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartHookah.getPrice()*count) + " _—Ä—É–±._" +
                        "\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                cartHookah.setCount(count);
                CART_SERVICE.addToCart(cartHookah, chat_id);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "hA/" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "hA/–ö–∞–ª—å—è–Ω—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + cartHookah.getBrand() + "* | " + cartHookah.getName() +
                        "\nüíµ *" + cartHookah.getPrice() + " —Ä—É–±. *\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n" + cartHookah.getDescription().trim() +
                        "\n[_](" + cartHookah.getImg() + ")");
            }
            else {
                count = 1;
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("hA/&" + id + "?" + "1","crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "hA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + cartHookah.getBrand() + "* | " + cartHookah.getName() +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartHookah.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartHookah.getPrice()*count) + " _—Ä—É–±._" +
                        "\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
        }
        else if (text.contains("?id")) {
            Hookah idHookah = HOOKAH_SERVICE.getHookahById(Long.parseLong(text.replace("?id", "")));
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "hA/&" + idHookah.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "hA/–ö–∞–ª—å—è–Ω—ã")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("üè∑ *" + idHookah.getBrand() + "* | " + idHookah.getName() +
                    "\nüíµ *" + idHookah.getPrice() + " —Ä—É–±. *\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                    "\n\n" + idHookah.getDescription().trim() +
                    "\n[_](" + idHookah.getImg() + ")");
        }
        else if (text.contains("?del")) {
            Hookah delHookah = HOOKAH_SERVICE.getHookahById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delHookah, chat_id);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "hA/&" + delHookah.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "hA/–ö–∞–ª—å—è–Ω—ã")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("üè∑ *" + delHookah.getName() + "*" +
                    "\nüíµ *" + delHookah.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delHookah.getDescription().trim() +
                    "\n[_](" + delHookah.getImg() + ")");
        }
        else {
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .buttons(availableHookahBrands, "hA/")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìî –ù–∞–ª–∏—á–∏–µ")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("*–ù–∞–ª–∏—á–∏–µ / –ö–∞–ª—å—è–Ω—ã*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥ –∫–∞–ª—å—è–Ω–∞:");
        }
        return editMessage.setParseMode("Markdown");
    }

    public synchronized EditMessageText hookahHandle(String text, long chat_id, long mes_id) {
        text = text.substring(1);
        EditMessageText editMessage;
        Hookah currHookah;
        if (allHookahBrands.contains(text)) {
            ArrayList<Hookah> hookahs = HOOKAH_SERVICE.getHookahsByBrand(text);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .hookahButtons(hookahs, "h")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "h–ö–∞–ª—å—è–Ω—ã")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –ö–∞–ª—å—è–Ω—ã*\n\n–ö–∞–ª—å—è–Ω—ã –±—Ä–µ–Ω–¥–∞ *" + text + "*: ");
        }
        else if (text.contains("&")) {
            Hookah cartHookah;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            cartHookah = HOOKAH_SERVICE.getHookahById(id);
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("h&" + id + "?" + ++count,"crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "h?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + cartHookah.getBrand() + "* | " + cartHookah.getName() +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartHookah.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartHookah.getPrice()*count) + " _—Ä—É–±._" +
                        "\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("h&" + id + "?" + --count,"crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "h?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + cartHookah.getBrand() + "* | " + cartHookah.getName() +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartHookah.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartHookah.getPrice()*count) + " _—Ä—É–±._" +
                        "\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                cartHookah.setCount(count);
                CART_SERVICE.addToCart(cartHookah, chat_id);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "h" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "h–ö–∞–ª—å—è–Ω—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + cartHookah.getBrand() + "* | " + cartHookah.getName() +
                        "\nüíµ *" + cartHookah.getPrice() + " —Ä—É–±. *\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n" + cartHookah.getDescription().trim() +
                        "\n[_](" + cartHookah.getImg() + ")");
            }
            else {
                count = 1;
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("h&" + id + "?" + "1","crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "h?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + cartHookah.getBrand() + "* | " + cartHookah.getName() +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartHookah.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartHookah.getPrice()*count) + " _—Ä—É–±._" +
                        "\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
        }
        else if (text.contains("?id")) {
            currHookah = HOOKAH_SERVICE.getHookahById(Long.parseLong(text.replace("?id", "")));
            if (currHookah.isAvailable()) {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "h&" + currHookah.getId() + "?")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "h–ö–∞–ª—å—è–Ω—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + currHookah.getBrand() + "* | " + currHookah.getName() +
                        "\nüíµ *" + currHookah.getPrice() + " —Ä—É–±. *\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n" + currHookah.getDescription().trim() +
                        "\n[_](" + currHookah.getImg() + ")");
            }
            else {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "h–ö–∞–ª—å—è–Ω—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + currHookah.getBrand() + "* | " + currHookah.getName() + " \n_(–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)_" +
                        "\nüíµ *" + currHookah.getPrice() + " —Ä—É–±. *\n`(—Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –∑–∞ –ø–æ–ª–Ω—ã–π –∫–æ–º–ª–µ–∫—Ç)`" +
                        "\n\n" + currHookah.getDescription().trim() +
                        "\n[_](" + currHookah.getImg() + ")");
            }
        }
        else if (text.contains("?del")) {
            Hookah delHookah = HOOKAH_SERVICE.getHookahById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delHookah, chat_id);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "h&" + delHookah.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "h–ö–∞–ª—å—è–Ω—ã")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("üè∑ *" + delHookah.getName() + "*" +
                    "\nüíµ *" + delHookah.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delHookah.getDescription().trim() +
                    "\n[_](" + delHookah.getImg() + ")");
        }
        else {
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .buttons(allHookahBrands, "h")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –ö–∞–ª—å—è–Ω—ã*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥ –∫–∞–ª—å—è–Ω–∞:");
        }
        return editMessage.setParseMode("Markdown");
    }

    public synchronized EditMessageText availableCharcoalHandle(String text, long chat_id, long mes_id) {
        text = text.substring(3);
        EditMessageText editMessageText;
        if (text.contains("&")) {
            Charcoal cartCharcoal;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            cartCharcoal = CHARCOAL_SERVICE.getCharcoalById(id);
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("uA/&" + id + "?" + ++count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "uA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartCharcoal.getName() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartCharcoal.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartCharcoal.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            } else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("uA/&" + id + "?" + --count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "uA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartCharcoal.getName() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartCharcoal.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartCharcoal.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            } else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                cartCharcoal.setCount(count);
                CART_SERVICE.addToCart(cartCharcoal, chat_id);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "uA/" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "uA/–£–≥–æ–ª—å")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartCharcoal.getName() + "*" +
                        "\nüíµ *" + cartCharcoal.getPrice() + " —Ä—É–±. *" +
                        "\n\n" + cartCharcoal.getDescription().trim() +
                        "\n[_](" + cartCharcoal.getImg() + ")");

            } else {
                count = 1;
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("uA/&" + id + "?" + "1", "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "uA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartCharcoal.getName() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartCharcoal.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartCharcoal.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }

        } else if (text.contains("?id")) {
            Charcoal idCharcoal = CHARCOAL_SERVICE.getCharcoalById(Long.parseLong(text.replace("?id", "")));
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "uA/&" + idCharcoal.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "uA/–£–≥–æ–ª—å")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + idCharcoal.getName() + "*" +
                    "\nüíµ *" + idCharcoal.getPrice() + " —Ä—É–±. *" +
                    "\n\n" + idCharcoal.getDescription().trim() +
                    "\n[_](" + idCharcoal.getImg() + ")");

        } else if (text.contains("?del")) {
            Charcoal delCharcoal = CHARCOAL_SERVICE.getCharcoalById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delCharcoal, chat_id);
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "uA/&" + delCharcoal.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "uA/–£–≥–æ–ª—å")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + delCharcoal.getName() + "*" +
                    "\nüíµ *" + delCharcoal.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delCharcoal.getDescription().trim() +
                    "\n[_](" + delCharcoal.getImg() + ")");
        } else {
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .charcoalButtons(CHARCOAL_SERVICE.getAvailableCharcoal())
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìî –ù–∞–ª–∏—á–∏–µ")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("*–ù–∞–ª–∏—á–∏–µ / –£–≥–æ–ª—å*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —É–≥–æ–ª—å:");
        }

        return editMessageText.setParseMode("Markdown");

    }

    public synchronized EditMessageText charcoalHandle(String text, long chat_id, long mes_id) {
        text = text.substring(1);
        EditMessageText editMessageText;
        Charcoal currCharcoal;
        if (text.contains("&")) {
            Charcoal cartCharcoal;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            cartCharcoal = CHARCOAL_SERVICE.getCharcoalById(id);
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("u&" + id + "?" + ++count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "u?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartCharcoal.getName() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartCharcoal.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartCharcoal.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");

            } else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("u&" + id + "?" + --count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "u?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartCharcoal.getName() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartCharcoal.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartCharcoal.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            } else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                cartCharcoal.setCount(count);
                CART_SERVICE.addToCart(cartCharcoal, chat_id);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "u" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "u–£–≥–æ–ª—å")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartCharcoal.getName() + "*" +
                        "\nüíµ *" + cartCharcoal.getPrice() + " —Ä—É–±. *" +
                        "\n\n" + cartCharcoal.getDescription().trim() +
                        "\n[_](" + cartCharcoal.getImg() + ")");
            } else {
                count = 1;
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("u&" + id + "?" + "1","crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "u?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartCharcoal.getName() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartCharcoal.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartCharcoal.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }

        } else if (text.contains("?id")) {
            currCharcoal = CHARCOAL_SERVICE.getCharcoalById(Long.parseLong(text.replace("?id", "")));
            if (currCharcoal.isAvailable()) {
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "u&" + currCharcoal.getId() + "?")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "u–£–≥–æ–ª—å")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + currCharcoal.getName() + "*" +
                        "\nüíµ *" + currCharcoal.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + currCharcoal.getDescription().trim() +
                        "\n[_](" + currCharcoal.getImg() + ")");
            } else {
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "u–£–≥–æ–ª—å")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + currCharcoal.getName() + "*" + " \n_(–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)_" +
                        "\nüíµ *" + currCharcoal.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + currCharcoal.getDescription().trim() +
                        "\n[_](" + currCharcoal.getImg() + ")");
            }
        } else if (text.contains("?del")) {
            Charcoal delCharcoal = CHARCOAL_SERVICE.getCharcoalById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delCharcoal, chat_id);
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "u&" + delCharcoal.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "u–£–≥–æ–ª—å")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + delCharcoal.getName() + "*" +
                    "\nüíµ *" + delCharcoal.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delCharcoal.getDescription().trim() +
                    "\n[_](" + delCharcoal.getImg() + ")");
        } else {
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .charcoalButtons(CHARCOAL_SERVICE.getAllCharcoal())
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –£–≥–æ–ª—å*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —É–≥–æ–ª—å:");
        }
        return editMessageText.setParseMode("Markdown");
    }

    public String gbpihquowbgwgbcwertyuiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvergfvuyvwgxgdxbcewibcvubwwevdowieibhoeasdaasgdqwee = "xx0kVgm1";

    public synchronized EditMessageText availableAccessoryHandle(String text, long chat_id, long mes_id) {
        text = text.substring(3);
        EditMessageText editMessageText;
        if (text.contains("aType?")) {
            if (text.contains("?–ß–∞—à–∞")) {
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(allAccessoryAvailableBowlBrands, "aA/bBrand?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aA/–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("*–ù–∞–ª–∏—á–∏–µ / –ê–∫—Å—Å–µ—Å—É–∞—Ä—ã / –ß–∞—à–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –±—Ä–µ–Ω–¥:");
            }
            else {
                ArrayList<Accessory> accessories = ACCESSORIES_SERVICE.getAccessoriesByType(text);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .accessoryButtons(accessories, "aA/")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aA/–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("*–ù–∞–ª–∏—á–∏–µ / –ê–∫—Å–µ—Å—É–∞—Ä—ã*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–æ–≤–∞—Ä:");
            }
        }
        else if (text.contains("bBrand?")) {
            ArrayList<Accessory> accessories = ACCESSORIES_SERVICE.getAvailableAccessoriesBowlsByBrand(text.split("\\?")[1]);
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .accessoryButtons(accessories, "aA/")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "aA/–ß–∞—à–∞")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("*–ù–∞–ª–∏—á–∏–µ / –ê–∫—Å—Å–µ—Å—É–∞—Ä—ã / –ß–∞—à–∏*\n\n–¢–æ–≤–∞—Ä—ã –±—Ä–µ–Ω–¥–∞: *" + text + "*");
        }
        else if (text.contains("&")) {
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            Accessory cartAccessory = ACCESSORIES_SERVICE.getAccessoryById(id);
            String fullName = cartAccessory.getBrand() + " " + cartAccessory.getName();
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("aA/&" + id + "?" + ++count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartAccessory.getType() + " | " +  fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartAccessory.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartAccessory.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            } else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("aA/&" + id + "?" + --count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartAccessory.getType() + " | " +  fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartAccessory.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartAccessory.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");

            } else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                cartAccessory.setCount(count);
                CART_SERVICE.addToCart(cartAccessory, chat_id);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "aA/" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aA/aType?" + cartAccessory.getType())
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ *" + cartAccessory.getPrice() + " —Ä—É–±. *" +
                        "\n\n" + cartAccessory.getDescription().trim() +
                        "\n[_](" + cartAccessory.getImg() + ")");
            } else {
                count = 1;
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("aA/&" + id + "?" + "1", "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartAccessory.getType() + " | " + fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartAccessory.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartAccessory.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
        } else if (text.contains("?id")) {
            Accessory idAccessory = ACCESSORIES_SERVICE.getAccessoryById(Long.parseLong(text.replace("?id", "")));
            String fullName = idAccessory.getBrand() + " " + idAccessory.getName();
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "aA/&" + idAccessory.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "aA/" + idAccessory.getType())
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + fullName.replace("null ", "").trim() + "*" +
                    "\nüíµ *" + idAccessory.getPrice() + " —Ä—É–±. *" +
                    "\n\n" + idAccessory.getDescription().trim() +
                    "\n[_](" + idAccessory.getImg() + ")");

        }
        else if (text.contains("?del")){
            Accessory delAccessory = ACCESSORIES_SERVICE.getAccessoryById(Long.parseLong(text.replace("?del", "")));
            String fullName = delAccessory.getBrand() + " " + delAccessory.getName();
            CART_SERVICE.deleteFromCart(delAccessory, chat_id);
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "aA/&" + delAccessory.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "aA/" + delAccessory.getType())
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + fullName.replace("null ", "").trim() + "*" +
                    "\nüíµ *" + delAccessory.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delAccessory.getDescription().trim() +
                    "\n[_](" + delAccessory.getImg() + ")");
        }
        else {
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .buttons(allAccessoryTypes, "aA/aType?")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìî –ù–∞–ª–∏—á–∏–µ")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("*–ù–∞–ª–∏—á–∏–µ / –ê–∫—Å—Å–µ—Å—É–∞—Ä—ã*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞:");
        }
        return editMessageText.setParseMode("Markdown");
    }

    public synchronized EditMessageText accessoryHandle(String text, long chat_id, long mes_id) {
        text = text.substring(1);
        EditMessageText editMessageText;
        Accessory currAccessory;
        if (text.contains("aType?")) {
            if (text.contains("?–ß–∞—à–∞")) {
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(allAccessoryBowlBrands, "abBrand?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "a–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –ê–∫—Å—Å–µ—Å—É–∞—Ä—ã / –ß–∞—à–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –±—Ä–µ–Ω–¥:");
            }
            else {
                ArrayList<Accessory> accessories = ACCESSORIES_SERVICE.getAccessoriesByType(text.split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .accessoryButtons(accessories, "a")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "a–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –ê–∫—Å–µ—Å—É–∞—Ä—ã*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–æ–≤–∞—Ä:");
            }
        }
        else if (text.contains("bBrand?")) {
            ArrayList<Accessory> accessories = ACCESSORIES_SERVICE.getAccessoriesBowlsByBrand(text.split("\\?")[1]);
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .accessoryButtons(accessories, "a")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "aaType?–ß–∞—à–∞")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –ê–∫—Å—Å–µ—Å—É–∞—Ä—ã / –ß–∞—à–∏*\n\n–¢–æ–≤–∞—Ä—ã –±—Ä–µ–Ω–¥–∞: *" + text + "*");
        }
        else if (text.contains("&")) {
            Accessory cartAccessory;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            cartAccessory = ACCESSORIES_SERVICE.getAccessoryById(id);
            String fullName = cartAccessory.getBrand() + " " + cartAccessory.getName();
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("a&" + id + "?" + ++count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "a?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartAccessory.getType() + " | " + fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartAccessory.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartAccessory.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("a&" + id + "?" + --count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "a?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartAccessory.getType() + " | " + fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartAccessory.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartAccessory.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            } else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                cartAccessory.setCount(count);
                CART_SERVICE.addToCart(cartAccessory, chat_id);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "a" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aaType?" + cartAccessory.getType())
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ *" + cartAccessory.getPrice() + " —Ä—É–±. *" +
                        "\n\n" + cartAccessory.getDescription().trim() +
                        "\n[_](" + cartAccessory.getImg() + ")");

            } else {
                count = 1;
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("a&" + id + "?" + "1", "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "a?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + cartAccessory.getType() + " | " + fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (cartAccessory.getPrice()) + " _—Ä—É–±._" +
                        " = " + (cartAccessory.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
        }
        else if (text.contains("?id")) {
            currAccessory = ACCESSORIES_SERVICE.getAccessoryById(Long.parseLong(text.replace("?id", "")));
            String fullName = currAccessory.getBrand() + " " + currAccessory.getName();
            if (currAccessory.isAvailable()) {
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "a&" + currAccessory.getId() + "?")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aaType?" + currAccessory.getType())
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName.replace("null ", "").trim() + "*" +
                        "\nüíµ *" + currAccessory.getPrice() + " —Ä—É–±. *" +
                        "\n\n" + currAccessory.getDescription().trim() +
                        "\n[_](" + currAccessory.getImg() + ")");
            } else {
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "aaType?" + currAccessory.getType())
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName.replace("null ", "").trim() + "*" + " " +
                        "\n_(–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)_" +
                        "\nüíµ *" + currAccessory.getPrice() + " —Ä—É–±. *" +
                        "\n\n" + currAccessory.getDescription().trim() +
                        "\n[_](" + currAccessory.getImg() + ")");
            }
        }
        else if (text.contains("?del")) {
            Accessory delAccessory = ACCESSORIES_SERVICE.getAccessoryById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delAccessory, chat_id);
            String fullName = delAccessory.getBrand() + " " + delAccessory.getName();
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "a&" + delAccessory.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "aaType?" + delAccessory.getType())
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + fullName.replace("null ", "").trim() + "*" +
                    "\nüíµ *" + delAccessory.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delAccessory.getDescription().trim() +
                    "\n[_](" + delAccessory.getImg() + ")");

        } else {
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .buttons(allAccessoryTypes, "aaType?")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –ê–∫—Å—Å–µ—Å—É–∞—Ä—ã*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞:");
        }
        return editMessageText.setParseMode("Markdown");
    }

    public String gbpihquoibgwgbcqwertyuiokjhgfdsazxcvbnmjhgfdsaqwertyuiokjhgfdsazxcvbnmjhgfdtnufoivunrngtruntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvyergfvuyvwgxgedixbgcewibcvubewiwevdowieibhoe = "1238275";

    public synchronized EditMessageText availableTobaccoHandle(String text, long chat_id, long mes_id) {
        text = text.substring(3);
        EditMessageText editMessage;
        if (allAvailableTobaccoFortresses.contains(text)) {
            ArrayList<Tobacco> tobaccos = TOBACCO_SERVICE.getTobaccoByFortress(text, allAvailableTobaccos);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .tobaccoButtons(tobaccos,"tA/", "")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "tA/–¢–∞–±–∞–∫–∏")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("*–ù–∞–ª–∏—á–∏–µ / –¢–∞–±–∞–∫–∏*\n\n–¢–∞–±–∞–∫–∏ –∫—Ä–µ–ø–æ—Å—Ç–∏: *" + text + "*");
        }
        else if (text.contains("cart")) {
            Tobacco crtTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("cart", "")));
            if (crtTobacco.getRadonejskayaTastes() != null && !crtTobacco.getRadonejskayaTastes().isEmpty()
                    && !crtTobacco.getRadonejskayaTastes().get(0).equals("null") && crtTobacco.getKarlaMarksaTastes() != null
                    && !crtTobacco.getKarlaMarksaTastes().isEmpty() && !crtTobacco.getKarlaMarksaTastes().get(0).equals("null")) {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("–£–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1", "tA/" + crtTobacco.getId() + "?RadTastes")
                        .endRow()
                        .row()
                        .button("–£–ª. –ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196", "tA/" + crtTobacco.getId() + "?KarTastes")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "tA/?id" + crtTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("–î–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∞–±–∞–∫–∞ –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≤–∫—É—Å—ã:\n\n"
                        + "*—É–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1* | `" + crtTobacco.getRadonejskayaTastes().toString().replace("{", "")
                        .replace("}", "") + "`\n\n*–ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196* | `"
                        + crtTobacco.getKarlaMarksaTastes().toString().replace("{", "")
                        .replace("}", "") + "`\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:");
            }
            else if (crtTobacco.getKarlaMarksaTastes() == null || crtTobacco.getKarlaMarksaTastes().isEmpty()
                    || crtTobacco.getKarlaMarksaTastes().get(0).equals("null")) {
                ArrayList<String> allTastes = crtTobacco.getRadonejskayaTastes();
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(allTastes, "tA/&" + crtTobacco.getId() + "?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "tA/?id" + crtTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("–î–∞–Ω–Ω—ã–π —Ç–∞–±–∞–∫ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É *–£–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1*.\n\n" +
                        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∫—É—Å:");
            }
            else {
                ArrayList<String> allTastes = crtTobacco.getKarlaMarksaTastes();
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(allTastes, "tA/&" + crtTobacco.getId() + "?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "tA/?id" + crtTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("–î–∞–Ω–Ω—ã–π —Ç–∞–±–∞–∫ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É *–ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196*.\n\n" +
                        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∫—É—Å:");
            }
        }
        else if (text.contains("&")) {
            Tobacco tasteTobacco;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            String taste = text.split("&")[1].split("\\?")[1];
            tasteTobacco = TOBACCO_SERVICE.getTobaccoById(id);
            tasteTobacco.setTaste(taste);
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[2]);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("tA/&" + id + "?" + taste + "?" + ++count,"crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + tasteTobacco.getName() + "*  (`" + taste + "`)" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (tasteTobacco.getPrice()) + " _—Ä—É–±._" +
                        " = " + (tasteTobacco.getPrice()*count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[2]);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("tA/&" + id + "?" + taste + "?" + --count,"crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + tasteTobacco.getName() + "*  (`" + taste + "`)" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (tasteTobacco.getPrice()) + " _—Ä—É–±._" +
                        " = " + (tasteTobacco.getPrice()*count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[2]);
                tasteTobacco.setCount(count);
                CART_SERVICE.addToCart(tasteTobacco, chat_id);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "t" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "tA/–¢–∞–±–∞–∫–∏")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + tasteTobacco.getName() + "*" +
                        "\nüíµ *" + tasteTobacco.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + tasteTobacco.getDescription().trim() +
                        "\n[_](" + tasteTobacco.getImg() + ")");
            }
            else {
                count = 1;
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("tA/&" + id + "?" + taste + "?" + count,"crt")
                        .endRow()
                        .row()
                        .button("–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + tasteTobacco.getName() + "*  (`" + taste + "`)" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (tasteTobacco.getPrice()) + " _—Ä—É–±._" +
                        " = " + (tasteTobacco.getPrice()*count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
        }
        else if (text.contains("?del")) {
            Tobacco delTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delTobacco, chat_id);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "tA/" + delTobacco.getId() + "crt")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "tA/–¢–∞–±–∞–∫–∏")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("üè∑ *" + delTobacco.getName() + "*" +
                    "\nüíµ *" + delTobacco.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delTobacco.getDescription().trim() +
                    "\n[_](" + delTobacco.getImg() + ")");
        }
        else if (text.contains("?id")) {
            Tobacco idTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("?id", "")));
            if (idTobacco.isAvailable()) {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "tA/" + idTobacco.getId() + "cart")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "tA/–¢–∞–±–∞–∫–∏")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + idTobacco.getName() + "*" +
                        "\nüíµ *" + idTobacco.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + idTobacco.getDescription().trim() +
                        "\n[_](" + idTobacco.getImg() + ")");
            }
            else {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "tA/–¢–∞–±–∞–∫–∏")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + idTobacco.getName() + "* \n_(–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)_" +
                        "\nüíµ *" + idTobacco.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + idTobacco.getDescription().trim() +
                        "\n[_](" + idTobacco.getImg() + ")");
            }
        }
        else if (text.contains("?RadTastes") || text.contains("?KarTastes")) {
            Tobacco addressTobacco;
            if (text.contains("?RadTastes")) {
                addressTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("?RadTastes","")));
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(addressTobacco.getRadonejskayaTastes(), "tA/&" + addressTobacco.getId() + "?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "tA/?id" + addressTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("*–ù–∞–ª–∏—á–∏–µ –≤–∫—É—Å–æ–≤ –ø–æ –∞–¥—Ä–µ—Å—É: –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∫—É—Å —Ç–∞–±–∞–∫–∞:");
            }
            else {
                addressTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("?KarTastes","")));
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(addressTobacco.getKarlaMarksaTastes(), "tA/&" + addressTobacco.getId() + "?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "tA/?id" + addressTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("*–ù–∞–ª–∏—á–∏–µ –≤–∫—É—Å–æ–≤ –ø–æ –∞–¥—Ä–µ—Å—É: –ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∫—É—Å —Ç–∞–±–∞–∫–∞:");
            }
        }
        else {
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .buttons(allAvailableTobaccoFortresses, "tA/")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìî –ù–∞–ª–∏—á–∏–µ")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("*–ù–∞–ª–∏—á–∏–µ / –¢–∞–±–∞–∫–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–ø–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–∞–±–∞–∫–∞:");
        }
        return editMessage;
    }

    public String gbpihquoibgwgbcwertyuiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvergfvuyvwgxgedxbcewibcvubewiwevdowieibhoeasdaasgdu = "DKQpxjx";

    public synchronized EditMessageText tobaccoHandle(String text, long chat_id, long mes_id) {
        text = text.substring(1);
        EditMessageText editMessage;
        if (allTobaccoFortresses.contains(text)) {
            ArrayList<Tobacco> tobaccos = TOBACCO_SERVICE.getTobaccoByFortress(text, allTobaccos);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .tobaccoButtons(tobaccos,"t","")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "t–¢–∞–±–∞–∫–∏")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –¢–∞–±–∞–∫–∏*\n\n–¢–∞–±–∞–∫–∏ –∫—Ä–µ–ø–æ—Å—Ç–∏: *" + text + "*");
        }
        else if (text.contains("cart")) {
            Tobacco crtTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("cart", "")));
            if (crtTobacco.getRadonejskayaTastes() != null && !crtTobacco.getRadonejskayaTastes().isEmpty()
                    && !crtTobacco.getRadonejskayaTastes().get(0).equals("null") && crtTobacco.getKarlaMarksaTastes() != null
                    && !crtTobacco.getKarlaMarksaTastes().isEmpty() && !crtTobacco.getKarlaMarksaTastes().get(0).equals("null")) {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("–£–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1", "t" + crtTobacco.getId() + "?RadTastes")
                        .endRow()
                        .row()
                        .button("–£–ª. –ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196", "t" + crtTobacco.getId() + "?KarTastes")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + crtTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("–î–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∞–±–∞–∫–∞ –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≤–∫—É—Å—ã:\n\n"
                        + "*—É–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1* | `" + crtTobacco.getRadonejskayaTastes().toString().replace("[", "")
                        .replace("]", "") + "`\n\n*–ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196* | `"
                        + crtTobacco.getKarlaMarksaTastes().toString().replace("[", "")
                        .replace("]", "") + "`\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:");
            }
            else if (crtTobacco.getKarlaMarksaTastes() == null || crtTobacco.getKarlaMarksaTastes().isEmpty()
                    || crtTobacco.getKarlaMarksaTastes().get(0).equals("null")) {
                ArrayList<String> allTastes = crtTobacco.getRadonejskayaTastes();
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(allTastes, "t&" + crtTobacco.getId() + "?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + crtTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("–î–∞–Ω–Ω—ã–π —Ç–∞–±–∞–∫ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É *–£–ª. –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1*.\n\n" +
                        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∫—É—Å:");
            }
            else {
                ArrayList<String> allTastes = crtTobacco.getKarlaMarksaTastes();
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(allTastes, "t&" + crtTobacco.getId() + "?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + crtTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("–î–∞–Ω–Ω—ã–π —Ç–∞–±–∞–∫ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É *–ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196*.\n\n" +
                        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∫—É—Å:");
            }
        }
        else if (text.contains("&")) {
            Tobacco tasteTobacco;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            String taste = text.split("&")[1].split("\\?")[1];
            tasteTobacco = TOBACCO_SERVICE.getTobaccoById(id);
            tasteTobacco.setTaste(taste);
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[2]);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("t&" + id + "?" + taste + "?" + ++count,"crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + tasteTobacco.getName() + "*  (`" + taste + "`)" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (tasteTobacco.getPrice()) + " _—Ä—É–±._" +
                        " = " + (tasteTobacco.getPrice()*count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[2]);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("t&" + id + "?" + taste + "?" + --count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + tasteTobacco.getName() + "*  (`" + taste + "`)" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (tasteTobacco.getPrice()) + " _—Ä—É–±._" +
                        " = " + (tasteTobacco.getPrice()*count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
            else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[2]);
                tasteTobacco.setCount(count);
                CART_SERVICE.addToCart(tasteTobacco, chat_id);
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "t" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t–¢–∞–±–∞–∫–∏")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + tasteTobacco.getName() + "*" +
                        "\nüíµ *" + tasteTobacco.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + tasteTobacco.getDescription().trim() +
                        "\n[_](" + tasteTobacco.getImg() + ")");
            }
            else {
                count = 1;
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("t&" + id + "?" + taste + "?" + count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + tasteTobacco.getName() + "*  (`" + taste + "`)" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (tasteTobacco.getPrice()) + " _—Ä—É–±._" +
                        " = " + (tasteTobacco.getPrice()*count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
        }
        else if (text.contains("?del")) {
            Tobacco delTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delTobacco, chat_id);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "t" + delTobacco.getId() + "crt")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "tnal")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("üè∑ *" + delTobacco.getName() + "*" +
                    "\nüíµ *" + delTobacco.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delTobacco.getDescription().trim() +
                    "\n[_](" + delTobacco.getImg() + ")");
        }
        else if (text.contains("?id")) {
            Tobacco idTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("?id", "")));
            if (idTobacco.isAvailable()) {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", "t" + idTobacco.getId() + "cart")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t–¢–∞–±–∞–∫–∏")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + idTobacco.getName() + "*" +
                        "\nüíµ *" + idTobacco.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + idTobacco.getDescription().trim() +
                        "\n[_](" + idTobacco.getImg() + ")");
            }
            else {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t–¢–∞–±–∞–∫–∏")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("üè∑ *" + idTobacco.getName() + "* \n_(–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)_" +
                        "\nüíµ *" + idTobacco.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + idTobacco.getDescription().trim() +
                        "\n[_](" + idTobacco.getImg() + ")");
            }
        }
        else if (text.contains("?RadTastes") || text.contains("?KarTastes")) {
            Tobacco addressTobacco;
            if (text.contains("?RadTastes")) {
                addressTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("?RadTastes","")));
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(addressTobacco.getRadonejskayaTastes(), "t&" + addressTobacco.getId() + "?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + addressTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("*–ù–∞–ª–∏—á–∏–µ –≤–∫—É—Å–æ–≤ –ø–æ –∞–¥—Ä–µ—Å—É: –†–∞–¥–æ–Ω–µ–∂—Å–∫–∞—è 1*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∫—É—Å —Ç–∞–±–∞–∫–∞:");
            }
            else {
                addressTobacco = TOBACCO_SERVICE.getTobaccoById(Long.parseLong(text.replace("?KarTastes","")));
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .buttons(addressTobacco.getKarlaMarksaTastes(), "t&" + addressTobacco.getId() + "?")
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "t?id" + addressTobacco.getId())
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText("*–ù–∞–ª–∏—á–∏–µ –≤–∫—É—Å–æ–≤ –ø–æ –∞–¥—Ä–µ—Å—É: –ü—Ä–æ—Å–ø–µ–∫—Ç –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 196*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∫—É—Å —Ç–∞–±–∞–∫–∞:");
            }
        }
        else {
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .buttons(allTobaccoFortresses, "t")
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –¢–∞–±–∞–∫–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–ø–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ —Ç–∞–±–∞–∫–∞:");
        }
        return editMessage;
    }

    public synchronized EditMessageText availableVaporizerHandle(String text, long chat_id, long mes_id) {
        text = text.substring(3);
        EditMessageText editMessageText;
        if (text.contains("&")) {
            Vaporizer vaporizer;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            vaporizer = VAPORIZER_SERVICE.getVaporizerById(id);
            String fullName = "–≠–ª. –∏—Å–ø–∞—Ä–∏—Ç–µ–ª—å | " + vaporizer.getName();
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("vA/&" + id + "?" + ++count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "vA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (vaporizer.getPrice()) + " _—Ä—É–±._" +
                        " = " + (vaporizer.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            } else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("vA/&" + id + "?" + --count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "vA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (vaporizer.getPrice()) + " _—Ä—É–±._" +
                        " = " + (vaporizer.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            } else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                vaporizer.setCount(count);
                CART_SERVICE.addToCart(vaporizer, chat_id);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "vA/" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "vA/–í–µ–π–ø—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + vaporizer.getName() + "*" +
                        "\nüíµ *" + vaporizer.getPrice() + " —Ä—É–±. *" +
                        "\n\n" + vaporizer.getDescription().trim() +
                        "\n[_](" + vaporizer.getImg() + ")");

            } else {
                count = 1;
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("vA/&" + id + "?" + "1", "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "vA/?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (vaporizer.getPrice()) + " _—Ä—É–±._" +
                        " = " + (vaporizer.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }

        } else if (text.contains("?id")) {
            Vaporizer idVaporizer = VAPORIZER_SERVICE.getVaporizerById(Long.parseLong(text.replace("?id", "")));
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "vA/&" + idVaporizer.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "vA/–í–µ–π–ø—ã")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + idVaporizer.getName() + "*" +
                    "\nüíµ *" + idVaporizer.getPrice() + " —Ä—É–±. *" +
                    "\n\n" + idVaporizer.getDescription().trim() +
                    "\n[_](" + idVaporizer.getImg() + ")");

        } else if (text.contains("?del")) {
            Vaporizer delVaporizer = VAPORIZER_SERVICE.getVaporizerById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delVaporizer, chat_id);
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "vA/&" + delVaporizer.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "vA/–í–µ–π–ø—ã")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + delVaporizer.getName() + "*" +
                    "\nüíµ *" + delVaporizer.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delVaporizer.getDescription().trim() +
                    "\n[_](" + delVaporizer.getImg() + ")");
        } else {
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .vaporizerButtons(allAvailableVaporizers)
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìî –ù–∞–ª–∏—á–∏–µ")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("*–ù–∞–ª–∏—á–∏–µ / –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –∏—Å–ø–∞—Ä–∏—Ç–µ–ª—å:");
        }

        return editMessageText.setParseMode("Markdown");

    }

    public String gbpihquowbgwgbcwssssiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfvvbvfebtvgerayfbsvergsvuyvasxssdxbcewibcvubwwevdowieibhoeasdaasgdqwes = "097:AAGnn";

    public synchronized EditMessageText vaporizerHandle(String text, long chat_id, long mes_id) {
        text = text.substring(1);
        EditMessageText editMessageText;
        if (text.contains("&")) {
            Vaporizer vaporizer;
            long id = Long.parseLong(text.split("&")[1].split("\\?")[0]);
            int count;
            vaporizer = VAPORIZER_SERVICE.getVaporizerById(id);
            String fullName = "–≠–ª. –∏—Å–ø–∞—Ä–∏—Ç–µ–ª—å | " + vaporizer.getName();
            if (text.contains("?up")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("v&" + id + "?" + ++count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "v?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (vaporizer.getPrice()) + " _—Ä—É–±._" +
                        " = " + (vaporizer.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");

            } else if (text.contains("?down")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("v&" + id + "?" + --count, "crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "v?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (vaporizer.getPrice()) + " _—Ä—É–±._" +
                        " = " + (vaporizer.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            } else if (text.contains("?crt")) {
                count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                vaporizer.setCount(count);
                CART_SERVICE.addToCart(vaporizer, chat_id);
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "v" + id + "?del")
                        .endRow()
                        .row()
                        .button("üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É", "c–ö–æ—Ä–∑–∏–Ω–∞")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "v–í–µ–π–ø—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + vaporizer.getName() + "*" +
                        "\nüíµ *" + vaporizer.getPrice() + " —Ä—É–±. *" +
                        "\n\n" + vaporizer.getDescription().trim() +
                        "\n[_](" + vaporizer.getImg() + ")");
            } else {
                count = 1;
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .countButtons("v&" + id + "?" + "1","crt")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "v?id" + id)
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + fullName + "*" +
                        "\nüíµ " + count + " _—à—Ç._ `X` " + (vaporizer.getPrice()) + " _—Ä—É–±._" +
                        " = " + (vaporizer.getPrice() * count) + " _—Ä—É–±._" +
                        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
            }
        }
        else if (text.contains("?id")) {
            Vaporizer idVaporizer = VAPORIZER_SERVICE.getVaporizerById(Long.parseLong(text.replace("?id", "")));
            if (idVaporizer.isAvailable()) {
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "v&" + idVaporizer.getId() + "?")
                        .endRow()
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "v–í–µ–π–ø—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + idVaporizer.getName() + "*" +
                        "\nüíµ *" + idVaporizer.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + idVaporizer.getDescription().trim() +
                        "\n[_](" + idVaporizer.getImg() + ")");
            } else {
                editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üîô –ù–∞–∑–∞–¥", "v–í–µ–π–ø—ã")
                        .endRow()
                        .rebuild(mes_id);
                editMessageText.setText("üè∑ *" + idVaporizer.getName() + "*" + " \n_(–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)_" +
                        "\nüíµ *" + idVaporizer.getPrice() + " —Ä—É–±.*" +
                        "\n\n" + idVaporizer.getDescription().trim() +
                        "\n[_](" + idVaporizer.getImg() + ")");
            }
        } else if (text.contains("?del")) {
            Vaporizer delVaporizer = VAPORIZER_SERVICE.getVaporizerById(Long.parseLong(text.replace("?del", "")));
            CART_SERVICE.deleteFromCart(delVaporizer, chat_id);
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("üõí –í –∫–æ—Ä–∑–∏–Ω—É", "v&" + delVaporizer.getId() + "?")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "v–í–µ–π–ø—ã")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("üè∑ *" + delVaporizer.getName() + "*" +
                    "\nüíµ *" + delVaporizer.getPrice() + " —Ä—É–±.*" +
                    "\n\n" + delVaporizer.getDescription().trim() +
                    "\n[_](" + delVaporizer.getImg() + ")");
        } else {
            editMessageText = InlineKeyboardMarkupBuilder.create(chat_id)
                    .vaporizerButtons(allVaporizers)
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                    .endRow()
                    .rebuild(mes_id);
            editMessageText.setText("*–ö–∞—Ç–∞–ª–æ–≥ / –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –∏—Å–ø–∞—Ä–∏—Ç–µ–ª—å:");
        }
        return editMessageText.setParseMode("Markdown");
    }

    public synchronized EditMessageText cartHandle(String text, long chat_id, long mes_id) {
        text = text.substring(1);
        EditMessageText editMessage;
        if (text.equals("clear")) {
            CART_SERVICE.clearUserCart(chat_id);
            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                    .row()
                    .button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–∞–º", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                    .endRow()
                    .row()
                    .button("üîô –ù–∞–∑–∞–¥", "c–ö–æ—Ä–∑–∏–Ω–∞")
                    .endRow()
                    .rebuild(mes_id);
            editMessage.setText("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥–æ–º —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –≤—Å—ë —á—Ç–æ –Ω—É–∂–Ω–æ");
        }
        else if (text.contains("&")) {
            ArrayList<Product> cart = CART_SERVICE.getUserCart(chat_id).getCart();
            int position;
            if (text.contains("count")) {
                position = Integer.parseInt(text.split("&")[1].split("\\?")[0]);
                Product product = cart.get(position-1);
                int count;
                if (text.contains("?up")) {
                    count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                    cart.get(position-1).setCount(count+1);
                    editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .row()
                            .countButtons("ccount&" + position + "?" + ++count,"accept")
                            .endRow()
                            .rebuild(mes_id);
                    editMessage.setText(CART_SERVICE.getUserCart(chat_id).toStringEdit(position) +
                            "\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
                }
                else if (text.contains("?down")) {
                    count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                    cart.get(position-1).setCount(count-1);
                    editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .row()
                            .countButtons("ccount&" + position + "?" + --count,"accept")
                            .endRow()
                            .rebuild(mes_id);
                    editMessage.setText(CART_SERVICE.getUserCart(chat_id).toStringEdit(position) +
                            "\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
                }
                else if (text.contains("accept")) {
                    count = Integer.parseInt(text.split("&")[1].split("\\?")[1]);
                    cart.get(position-1).setCount(count);
                    editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .row()
                            .positionButtons("c&" + position, cart.size())
                            .endRow()
                            .row()
                            .button("üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", "ccount&" + position + "?")
                            .endRow()
                            .row()
                            .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "calert&" + position)
                            .endRow()
                            .row()
                            .button("üîô –ù–∞–∑–∞–¥", "c–ö–æ—Ä–∑–∏–Ω–∞")
                            .endRow()
                            .rebuild(mes_id);
                    editMessage.setText(CART_SERVICE.getUserCart(chat_id).toStringEdit(position) +
                            "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å:");
                }
                else {
                    count = product.getCount();
                    editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .row()
                            .countButtons("ccount&" + position + "?" + count,"accept")
                            .endRow()
                            .rebuild(mes_id);
                    editMessage.setText(CART_SERVICE.getUserCart(chat_id).toStringEdit(position) +
                            "\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:");
                }
            }
            else {
                if (text.contains("?up")) {
                    position = Integer.parseInt(text.split("&")[1].split("\\?")[0]);
                    editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .row()
                            .positionButtons("c&" + ++position, cart.size())
                            .endRow()
                            .row()
                            .button("üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", "ccount&" + position + "?")
                            .endRow()
                            .row()
                            .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "calert&" + position)
                            .endRow()
                            .row()
                            .button("üîô –ù–∞–∑–∞–¥", "c–ö–æ—Ä–∑–∏–Ω–∞")
                            .endRow()
                            .rebuild(mes_id);
                    editMessage.setText(CART_SERVICE.getUserCart(chat_id).toStringEdit(position) +
                            "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å:");
                }
                else if (text.contains("?down")) {
                    position = Integer.parseInt(text.split("&")[1].split("\\?")[0]);
                    if (position == 1) {
                        editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                                .positionButtons("c&" + --position, cart.size())
                                .row()
                                .button("‚õî –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É", "cclear")
                                .endRow()
                                .row()
                                .button("üîô –ù–∞–∑–∞–¥", "c–ö–æ—Ä–∑–∏–Ω–∞")
                                .endRow()
                                .rebuild(mes_id);
                        editMessage.setText(CART_SERVICE.getUserCart(chat_id).toString() +
                                "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å:");
                    }
                    else {
                        editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                                .row()
                                .positionButtons("c&" + --position, cart.size())
                                .endRow()
                                .row()
                                .button("üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", "ccount&" + position + "?")
                                .endRow()
                                .row()
                                .button("‚õî –£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "calert&" + position)
                                .endRow()
                                .row()
                                .button("üîô –ù–∞–∑–∞–¥", "c–ö–æ—Ä–∑–∏–Ω–∞")
                                .endRow()
                                .rebuild(mes_id);
                        editMessage.setText(CART_SERVICE.getUserCart(chat_id).toStringEdit(position) +
                                "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å:");
                    }
                }
                else if (text.contains("alert")) {
                    position = Integer.parseInt(text.split("&")[1]);
                    Product product = CART_SERVICE.getUserCart(chat_id).getCart().get(position - 1);
                    if (text.contains("?del")) {
                        CART_SERVICE.deleteFromCart(product, chat_id);
                        position = 0;
                        if (cart.size() == 0) {
                            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                                    .row()
                                    .button("üìì –ö–∞—Ç–∞–ª–æ–≥", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                                    .endRow()
                                    .rebuild(mes_id);
                            editMessage.setText(CART_SERVICE.getUserCart(chat_id).toString());
                        } else {
                            editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                                    .positionButtons("c&" + position, cart.size())
                                    .row()
                                    .button("‚õî –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É", "cclear")
                                    .endRow()
                                    .row()
                                    .button("üîô –ù–∞–∑–∞–¥", "c–ö–æ—Ä–∑–∏–Ω–∞")
                                    .endRow()
                                    .rebuild(mes_id);
                            editMessage.setText(CART_SERVICE.getUserCart(chat_id).toString() +
                                    "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å:");
                        }
                    }
                    else {
                        String brand = product.getBrand();
                        if (brand == null)
                            brand = "";
                        editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                                .row()
                                .button("–£–¥–∞–ª–∏—Ç—å", "calert?del&" + position)
                                .endRow()
                                .row()
                                .button("üîô –ù–∞–∑–∞–¥", "c&edit")
                                .endRow()
                                .rebuild(mes_id);
                        editMessage.setText("–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å *" + brand + " "
                                + product.getName() + "* –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã?");
                    }
                }
                else {
                    position = 0;
                    editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                            .positionButtons("c&" + position, cart.size())
                            .row()
                            .button("‚õî –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É", "cclear")
                            .endRow()
                            .row()
                            .button("üîô –ù–∞–∑–∞–¥", "c–ö–æ—Ä–∑–∏–Ω–∞")
                            .endRow()
                            .rebuild(mes_id);
                    editMessage.setText(CART_SERVICE.getUserCart(chat_id).toString() +
                            "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å:");
                }
            }
        }
        else {
            if (CART_SERVICE.getUserCart(chat_id).getCart().size() == 0) {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("üìì –ö–∞—Ç–∞–ª–æ–≥", "müìì –ö–∞—Ç–∞–ª–æ–≥")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText(CART_SERVICE.getUserCart(chat_id).toString());
            }
            else {
                editMessage = InlineKeyboardMarkupBuilder.create(chat_id)
                        .row()
                        .button("\uD83D\uDCE6 –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", "cmakeOrd")
                        .endRow()
                        .row()
                        .button("üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", "c&edit")
                        .endRow()
                        .rebuild(mes_id);
                editMessage.setText(CART_SERVICE.getUserCart(chat_id).toString());
            }
        }
        return editMessage;
    }

    public String gbpihquoibgwgbcqwertyuiokjhgfdsazxcvbnmjgfdsaqwertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtrntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvergfvuyvwgxgedxbgcewibcvubewiwevdowieibhoeasdas = "Cfjey6z";

    public synchronized AnswerCallbackQuery answerCallbackQuery(String callbackId, String message) {
        AnswerCallbackQuery answer = new AnswerCallbackQuery();
        answer.setCallbackQueryId(callbackId);
        answer.setShowAlert(false);
        answer.setText(message);
        answer.setShowAlert(true);
        return answer;
    }

    public synchronized void sendMailToEmployee(Order order) {
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.mail.ru");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class",
                "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");
        Session session = Session.getDefaultInstance(props,
                new javax.mail.Authenticator() {
                    @Override
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication("grizzly_shop_bot@mail.ru","oTT*y31poUpT");
                    }
                });
        try {
            javax.mail.Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("grizzly_shop_bot@mail.ru"));
            message.setRecipients(javax.mail.Message.RecipientType.TO,
                    InternetAddress.parse("hot-dj@mail.ru"));
            message.setSubject("–ù–æ–≤—ã–π –∑–∞–∫–∞–∑");
            message.setContent(order.toStringHTML());
            Transport.send(message);
        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }

        long dmt_chat_id = 757517710;
        long den_chat_id = 416481326;
        SendMessage sendMessage1 = new SendMessage().setChatId(dmt_chat_id);
        SendMessage sendMessage2 = new SendMessage().setChatId(den_chat_id);
        sendMessage1.setText(order.toString());
        sendMessage1.setParseMode("Markdown");
        sendMessage2.setText(order.toString());
        sendMessage2.setParseMode("Markdown");
        try {
            execute(sendMessage1);
            execute(sendMessage2);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    public synchronized void updateHandle(Update update) throws TelegramApiException {
        if (update.hasMessage() && update.getMessage().hasText()) {
            Message inMessage = update.getMessage();
            long chat_id = inMessage.getChatId();
            SendMessage outMessage = new SendMessage().setChatId(chat_id);
            String text = update.getMessage().getText();
            System.out.println(new Date() + ": " + inMessage.getFrom().getFirstName() + " " +
                    inMessage.getFrom().getLastName() + " (" + inMessage.getFrom().getUserName() +
                    "): " + text);
            execute(messageStarter(text, outMessage).setParseMode("Markdown"));
        }
        else if (update.hasCallbackQuery()) {
            Message inMessage = update.getCallbackQuery().getMessage();
            long chat_id = inMessage.getChatId();
            long mes_id = inMessage.getMessageId();
            String text = update.getCallbackQuery().getData();
            System.out.println(new Date() + ": " + update.getCallbackQuery().getFrom().getFirstName() + " " +
                    update.getCallbackQuery().getFrom().getLastName() + " (" + update.getCallbackQuery().getFrom().getUserName() +
                    "): " + text);
            if (text.contains("?crt"))
                execute(answerCallbackQuery(update.getCallbackQuery().getId(), "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!"));
            if (text.contains("?del"))
                execute(answerCallbackQuery(update.getCallbackQuery().getId(), "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã!"));
            if (text.startsWith("c")) {
                if (text.contains("makeOrd")) {
                    SendMessage outMessage = new SendMessage().setChatId(chat_id);
                    execute(messageStarter("\uD83D\uDCE6 –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", outMessage));
                }
                else
                    execute(cartHandle(text, chat_id, mes_id).setParseMode("Markdown"));
            }
            else if (text.startsWith("h")) {
                if (text.contains("hA/"))
                    execute(availableHookahHandle(text, chat_id, mes_id).setParseMode("Markdown"));
                else
                    execute(hookahHandle(text, chat_id, mes_id).setParseMode("Markdown"));
            }
            else if (text.startsWith("t")) {
                if (text.contains("tA/"))
                    execute(availableTobaccoHandle(text, chat_id, mes_id).setParseMode("Markdown"));
                else
                    execute(tobaccoHandle(text, chat_id, mes_id).setParseMode("Markdown"));
            }
            else if (text.startsWith("a")) {
                if (text.contains("aA/"))
                    execute(availableAccessoryHandle(text, chat_id, mes_id).setParseMode("Markdown"));
                else
                    execute(accessoryHandle(text, chat_id, mes_id).setParseMode("Markdown"));
            }
            else if (text.startsWith("u")) {
                if (text.contains("uA/"))
                    execute(availableCharcoalHandle(text, chat_id, mes_id).setParseMode("Markdown"));
                else
                    execute(charcoalHandle(text, chat_id, mes_id).setParseMode("Markdown"));
            }
            else if (text.startsWith("v")) {
                if (text.contains("vA/"))
                    execute(availableVaporizerHandle(text, chat_id, mes_id).setParseMode("Markdown"));
                else
                    execute(vaporizerHandle(text, chat_id, mes_id).setParseMode("Markdown"));
            }
            else if (text.startsWith("m")) {
                execute(messageHandle(text, chat_id, mes_id).setParseMode("Markdown"));
            }
        }
        else {
            long chat_id = update.getMessage().getChatId();
            if (update.getMessage().hasContact()) {
                if (CART_SERVICE.getUserCart(chat_id).getCart().size() != 0) {
                    ORDER_SERVICE.getOrder(chat_id).setCustomerPhone(update.getMessage().getContact().getPhoneNumber());
                    ORDER_SERVICE.getOrder(chat_id).setCustomerName(update.getMessage().getContact().getFirstName());
                    ORDER_SERVICE.getOrder(chat_id).setCustomerSurname(update.getMessage().getContact().getLastName());
                    SendMessage sendMessage = new SendMessage().setChatId(chat_id);
                    execute(messageStarter("–ü–æ–¥–µ–ª–∏–ª–∏—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", sendMessage));
                    Order order = ORDER_SERVICE.getOrder(chat_id);
                    order.setCustomerCart(CART_SERVICE.getUserCart(chat_id).toStringOrder());
                    order.setCustomerCartHTML(CART_SERVICE.getUserCart(chat_id).toStringOrderHTML());
                    sendMailToEmployee(order);
                    CART_SERVICE.clearUserCart(chat_id);
                }
            }
        }
    }

    public String getBotUsername() {
        return "Grizzly_Shop_Bot";
    }

    public String gbpihquowbgwgbcwssssiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihasdasbgnyygcbcgfuqiwebhfuvbhqbdgbvfvvbvfebtvgerayfbsvergsvuyvasxssdxbcewibcvubwwevdowieibhoeasqwehqwehhh = gbpihquoibgwgbcqwertyuiokjhgfdsazxcvbnmjhgfdsaqwertyuiokjhgfdsazxcvbnmjhgfdtnufoivunrngtruntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvyergfvuyvwgxgedixbgcewibcvubewiwevdowieibhoe +
            gbpihquowbgwgbcwssssiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfvvbvfebtvgerayfbsvergsvuyvasxssdxbcewibcvubwwevdowieibhoeasdaasgdqwes +
            gbpihquoibgwgbcwertyuiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvergfvuyvwgxgedxbcewibcvubewiwevdowieibhoeasdaasgdu +
            gbpihquoibgwgbcqwertyuiokjhgfdsazxcvbnmjgfdsaqwertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtrntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvergfvuyvwgxgedxbgcewibcvubewiwevdowieibhoeasdas +
            gbpihquowbgwgbcwertyuiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvergfvuyvwgxgdxbcewibcvubwwevdowieibhoeasdaasgdqwee +
            gbpihquowbgwgbcwssssiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihnoqewvhrqfgcbcgfuqiwebhfuvbhqbdgbvfhubvfebtfvgeryfbgvergfvuyvwagxgdxbcewibcvubwwevdowieibhoeasdaasgdqwes;

    public String getBotToken() {
    return gbpihquowbgwgbcwssssiokjhgfdsazxcvbnmjgfdsawertyuiokjhgfdsazxcbnmjhgfdtnufoivunrngtntghtrhegbhrtgbuihasdasbgnyygcbcgfuqiwebhfuvbhqbdgbvfvvbvfebtvgerayfbsvergsvuyvasxssdxbcewibcvubwwevdowieibhoeasqwehqwehhh;
    }
}

package Bot.Models;

import Bot.Models.Products.*;

import java.util.ArrayList;

public class Cart {

    private long chat_id;
    private ArrayList<Product> cart;

    public Cart(long chat_id) {
        cart = new ArrayList<>();
        this.chat_id = chat_id;
    }

    public Cart() {
    }

    public long getChat_id() {
        return chat_id;
    }

    public void setChat_id(long chat_id) {
        this.chat_id = chat_id;
    }

    public ArrayList<Product> getCart() {
        return cart;
    }

    public void setCart(ArrayList<Product> cart) {
        this.cart = cart;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        long sumPrice = 0;
        sb.append("*üõí –ö–û–†–ó–ò–ù–ê*\n\n");
        for (Product product : cart) {
            if (product instanceof Tobacco) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append(cart.indexOf(product) + 1)
                        .append(".  *").append(product.getName()).append("*\n     (`").append(product.getTaste()).append("`)\n")
                        .append("     ").append(product.getCount()).append(" _—à—Ç._ `X` ").append(product.getPrice())
                        .append(" _—Ä—É–±._\n\n");
            }
            else if (product instanceof Hookah) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append(cart.indexOf(product) + 1)
                        .append(".  *").append(product.getBrand()).append(" ").append(product.getName()).append("*\n")
                        .append("     ").append(product.getCount()).append(" _—à—Ç._ `X` ").append(product.getPrice())
                        .append(" _—Ä—É–±._\n\n");
            }
            else if (product instanceof Accessory) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append(cart.indexOf(product) + 1)
                        .append(".  *").append(((Accessory) product).getType()).append("* ").append(product.getName())
                        .append("\n").append("     ").append(product.getCount()).append(" _—à—Ç._ `X` ").append(product.getPrice())
                        .append(" _—Ä—É–±._\n\n");
            }
            else if (product instanceof Charcoal) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append(cart.indexOf(product) + 1)
                        .append(".  *").append(product.getName()).append("* ").append("\n")
                        .append("     ").append(product.getCount()).append(" _—à—Ç._ `X` ").append(product.getPrice())
                        .append(" _—Ä—É–±._\n\n");
            }
            else if (product instanceof Vaporizer) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append(cart.indexOf(product) + 1)
                        .append(".  *").append(product.getName()).append("* ").append("\n")
                        .append("     ").append(product.getCount()).append(" _—à—Ç._ `X` ").append(product.getPrice())
                        .append(" _—Ä—É–±._\n\n");
            }
        }
        sb.append("*–ò–¢–û–ì–û:*  ").append(sumPrice).append(" _—Ä—É–±._").append("\n");
        if (sumPrice == 0)
            return "*üõí –ö–û–†–ó–ò–ù–ê*\n\n–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥–æ–º, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –≤—Å—ë —á—Ç–æ –Ω—É–∂–Ω–æ\n";
        else
            return new String(sb);
    }

    public String toStringEdit(int position) {
        String pos = String.valueOf(position);
        return toString().replace(pos + ".","\uD83D\uDCCD");
    }

    public String toStringOrder() {
        StringBuilder sb = new StringBuilder();
        long sumPrice = 0;
        for (Product product : cart) {
            if (product instanceof Tobacco) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("–¢–∞–±–∞–∫ ").append(product.getName()).append("\n(").append(product.getTaste()).append(")\n")
                        .append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.\n\n");
            } else if (product instanceof Hookah) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("–ö–∞–ª—å—è–Ω ").append(product.getBrand()).append(" ").append(product.getName()).append("\n")
                        .append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.\n\n");
            } else if (product instanceof Accessory) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("–ê–∫—Å–µ—Å—Å—É–∞—Ä ").append(product.getName())
                        .append("\n").append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.\n\n");
            } else if (product instanceof Charcoal) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("–£–≥–æ–ª—å ").append(product.getName()).append("\n")
                        .append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.\n\n");
            }
            else if (product instanceof Vaporizer) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("–≠–ª. –ò—Å–ø–∞—Ä–∏—Ç–µ–ª—å ").append(product.getName()).append("\n")
                        .append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.\n\n");
            }
        }
        sb.append("–ò–¢–û–ì–û:  ").append(sumPrice).append(" —Ä—É–±.").append("\n");
        return new String(sb);
    }

    public String toStringOrderHTML() {
        StringBuilder sb = new StringBuilder();
        long sumPrice = 0;
        sb.append("<ul>");
        for (Product product : cart) {
            if (product instanceof Tobacco) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("<li>–¢–∞–±–∞–∫ <b>").append(product.getName()).append("</b><br>(").append(product.getTaste()).append(")<br>")
                        .append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.</li>");
            } else if (product instanceof Hookah) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("<li>–ö–∞–ª—å—è–Ω <b>").append(product.getBrand()).append(" ").append(product.getName()).append("</b><br>")
                        .append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.</li>");
            } else if (product instanceof Accessory) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("<li>–ê–∫—Å–µ—Å—Å—É–∞—Ä <b>").append(product.getName())
                        .append("</b><br>").append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.</li>\n\n");
            } else if (product instanceof Charcoal) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("<li>–£–≥–æ–ª—å <b>").append(product.getName()).append("</b><br>")
                        .append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.</li>");
            }
            else if (product instanceof Vaporizer) {
                sumPrice += product.getPrice() * product.getCount();
                sb.append("<li>–≠–ª. –ò—Å–ø–∞—Ä–∏—Ç–µ–ª—å <b>").append(product.getName()).append("</b><br>")
                        .append(product.getCount()).append(" —à—Ç. X ").append(product.getPrice())
                        .append(" —Ä—É–±.</li>");
            }
        }
        sb.append("<br><b>–ò–¢–û–ì–û:  ").append(sumPrice).append(" —Ä—É–±.").append("</b></ul>");
        return new String(sb);
    }
}
